<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <packaging>war</packaging>

  <artifactId>catalog-jsgui</artifactId>
  <groupId>org.brooklyncentral.catalog</groupId>

  <name>Brooklyn-Central Catalog Javascript Site</name>

  <description>
        Brooklyn-Central Catalog Javascript Site
    </description>

  <parent>
    <groupId>org.brooklyncentral.catalog</groupId>
    <artifactId>parent</artifactId>
    <version>0.8.0-SNAPSHOT</version><!-- BROOKLYN_VERSION -->
    <relativePath>../pom.xml</relativePath>
  </parent>

  <properties>
    <project.build.webapp>
      ${project.build.directory}/${project.build.finalName}
    </project.build.webapp>
    <nodejs.path>${project.basedir}/target/nodejs/node</nodejs.path>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.brooklyn</groupId>
      <artifactId>brooklyn-api</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.brooklyn</groupId>
      <artifactId>brooklyn-utils-common</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.brooklyncentral.catalog</groupId>
      <artifactId>catalog-rest-server</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.brooklyncentral.catalog</groupId>
      <artifactId>catalog-rest-server</artifactId>
      <version>${project.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.brooklyn</groupId>
      <artifactId>brooklyn-test-support</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-webapp</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>${maven-war-plugin.version}</version>
        <configuration>
          <useCache>true</useCache> <!-- to prevent replaced files being overwritten -->
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jasig.maven</groupId>
        <artifactId>sass-maven-plugin</artifactId>
        <configuration>
          <sassSourceDirectory>${basedir}/src/main/scss</sassSourceDirectory>
          <destination>${project.build.directory}/assets/css</destination>
        </configuration>
        <executions>
          <execution>
            <id>generate-css</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>update-stylesheets</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.jasig.maven</groupId>
          <artifactId>sass-maven-plugin</artifactId>
          <version>1.1.1</version>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.jasig.maven</groupId>
                    <artifactId>sass-maven-plugin</artifactId>
                    <versionRange>[1.1.1,)</versionRange>
                    <goals>
                      <goal>update-stylesheets</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>nodejs-path-override</id>
      <activation>
        <os>
          <family>linux</family>
        </os>
      </activation>
      <properties>
        <nodejs.path>${project.basedir}/src/build/nodejs</nodejs.path>
      </properties>
      <dependencies>
        <dependency>
          <groupId>com.github.skwakman.nodejs-maven-binaries</groupId>
          <artifactId>nodejs-maven-binaries</artifactId>
          <version>${nodejs-maven-binaries.version}</version>
          <classifier>linux-x64</classifier>
          <type>zip</type>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>${maven-dependency-plugin.version}</version>
            <executions>
              <execution>
                <id>unpack-nodejs64</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>unpack-dependencies</goal>
                </goals>
                <configuration>
                  <includeGroupIds>com.github.skwakman.nodejs-maven-binaries</includeGroupIds>
                  <includeArtifactIds>nodejs-maven-binaries</includeArtifactIds>
                  <outputDirectory>
                    ${project.basedir}/target/nodejs64/
                  </outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>Optimize resources</id>
      <activation>
        <property>
          <name>!skipOptimization</name>
        </property>
      </activation>
      <build>
        <plugins>
                    <!-- Installs node.js in target/. Means we get the benefits of node's speed
                         (compared to Rhino) without having to install it manually. -->
          <plugin>
            <groupId>com.github.skwakman.nodejs-maven-plugin</groupId>
            <artifactId>nodejs-maven-plugin</artifactId>
            <version>${nodejs-maven-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>extract</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
                            <!-- target directory for node binaries -->
              <targetDirectory>${project.basedir}/target/nodejs/</targetDirectory>
            </configuration>
          </plugin>

                    <!-- Including the exploded goal means sources are in place ready for the replacer plugin. -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <version>${maven-war-plugin.version}</version>
            <executions>
              <execution>
                <id>prepare-war</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>exploded</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

                    <!-- Runs the require.js optimizer with node to produce a single artifact. -->
          <plugin>
            <groupId>com.github.mcheely</groupId>
            <artifactId>requirejs-maven-plugin</artifactId>
            <version>${requirejs-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>optimize-js</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>optimize</goal>
                </goals>
                <configuration>
                  <configFile>${project.basedir}/src/build/optimize-js.json</configFile>
                </configuration>
              </execution>
              <execution>
                <id>optimize-css</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>optimize</goal>
                </goals>
                <configuration>
                  <configFile>${project.basedir}/src/build/optimize-css.json</configFile>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <nodeExecutable>${nodejs.path}</nodeExecutable>
              <optimizerFile>${project.basedir}/src/build/requirejs-maven-plugin/r.js</optimizerFile>
                            <!-- Replaces Maven tokens in the build file with their values -->
              <filterConfig>true</filterConfig>
            </configuration>
          </plugin>

                    <!-- Modify index.html to point to the optimized resources generated above. -->
          <plugin>
            <groupId>com.google.code.maven-replacer-plugin</groupId>
            <artifactId>replacer</artifactId>
            <version>${maven-replacer-plugin.version}</version>
            <executions>
              <execution>
                <id>modify-for-optimized</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>replace</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <file>${project.build.webapp}/index.html</file>
              <replacements>
                <replacement>
                  <token>assets/config.js</token>
                  <value>assets/js/gui.all.min.js</value>
                </replacement>
                <replacement>
                  <token>assets/css/styles.css</token>
                  <value>assets/css/styles.min.css</value>
                </replacement>
                <replacement>
                  <token>GIT_SHA_1</token>
                  <value>${buildNumber}</value>
                </replacement>
              </replacements>
            </configuration>
          </plugin>

                    <!-- Compress the minified files. Jetty will serve the gzipped content instead. -->
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>Compress resources</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <gzip
                      src="${project.build.webapp}/assets/css/styles.min.css"
                      destfile="${project.build.webapp}/assets/css/styles.min.css.gz" />
                    <gzip
                      src="${project.build.webapp}/assets/css/brooklyn.css"
                      destfile="${project.build.webapp}/assets/css/brooklyn.css.gz" />
                    <gzip
                      src="${project.build.webapp}/assets/js/gui.all.min.js"
                      destfile="${project.build.webapp}/assets/js/gui.all.min.js.gz" />
                    <gzip
                      src="${project.build.webapp}/assets/js/libs/require.js"
                      destfile="${project.build.webapp}/assets/js/libs/require.js.gz" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>

